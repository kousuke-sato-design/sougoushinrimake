const fs = require('fs');
const filePath = 'src/routes/dashboard/landing-pages/[id]/edit/+page.svelte';
let content = fs.readFileSync(filePath, 'utf8');

// 482行目以降の破損部分をすべて削除
const lines = content.split('\n');
const goodLines = lines.slice(0, 482); // 482行目（`<div class="w-1/2..."`）まで保持

// 482行目の内容を確認して調整
goodLines[481] = '\t\t<!-- 右側: 編集UI -->';
goodLines.push('\t\t<div class="w-1/2 overflow-y-auto bg-white">');
goodLines.push('\t\t\t<div class="p-6 space-y-6">');
goodLines.push('\t\t\t\t<!-- この部分は後で編集UIを追加します -->');
goodLines.push('\t\t\t\t<p class="text-gray-500">編集UIがここに表示されます</p>');
goodLines.push('\t\t\t</div>');
goodLines.push('\t\t</div>');
goodLines.push('\t</div>');
goodLines.push('</div>');
goodLines.push('');
goodLines.push('{#if form?.message}');
goodLines.push('\t<div');
goodLines.push('\t\tclass="fixed bottom-4 right-4 px-6 py-3 rounded-lg shadow-lg {form.success');
goodLines.push('\t\t\t? \'bg-green-100 text-green-800 border border-green-200\'');
goodLines.push('\t\t\t: \'bg-red-100 text-red-800 border border-red-200\'}"');
goodLines.push('\t>');
goodLines.push('\t\t{form.message}');
goodLines.push('\t</div>');
goodLines.push('{/if}');
goodLines.push('');
goodLines.push('<!-- テンプレート保存モーダル -->');
goodLines.push('{#if showTemplateModal}');
goodLines.push('\t<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">');
goodLines.push('\t\t<div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">');
goodLines.push('\t\t\t<h2 class="text-xl font-bold text-gray-800 mb-4">テンプレートとして保存</h2>');
goodLines.push('\t\t\t');
goodLines.push('\t\t\t<div class="space-y-4">');
goodLines.push('\t\t\t\t<div>');
goodLines.push('\t\t\t\t\t<label for="templateName" class="block text-sm font-medium text-gray-700 mb-1">');
goodLines.push('\t\t\t\t\t\tテンプレート名 <span class="text-red-500">*</span>');
goodLines.push('\t\t\t\t\t</label>');
goodLines.push('\t\t\t\t\t<input');
goodLines.push('\t\t\t\t\t\tid="templateName"');
goodLines.push('\t\t\t\t\t\ttype="text"');
goodLines.push('\t\t\t\t\t\tbind:value={templateName}');
goodLines.push('\t\t\t\t\t\tclass="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"');
goodLines.push('\t\t\t\t\t\tplaceholder="例: 商品LP基本テンプレート"');
goodLines.push('\t\t\t\t\t/>');
goodLines.push('\t\t\t\t</div>');
goodLines.push('');
goodLines.push('\t\t\t\t<div>');
goodLines.push('\t\t\t\t\t<label for="templateDescription" class="block text-sm font-medium text-gray-700 mb-1">');
goodLines.push('\t\t\t\t\t\t説明');
goodLines.push('\t\t\t\t\t</label>');
goodLines.push('\t\t\t\t\t<textarea');
goodLines.push('\t\t\t\t\t\tid="templateDescription"');
goodLines.push('\t\t\t\t\t\tbind:value={templateDescription}');
goodLines.push('\t\t\t\t\t\trows="3"');
goodLines.push('\t\t\t\t\t\tclass="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"');
goodLines.push('\t\t\t\t\t\tplaceholder="このテンプレートの用途や特徴を入力"');
goodLines.push('\t\t\t\t\t></textarea>');
goodLines.push('\t\t\t\t</div>');
goodLines.push('');
goodLines.push('\t\t\t\t<div class="flex gap-3 pt-4">');
goodLines.push('\t\t\t\t\t<button');
goodLines.push('\t\t\t\t\t\ton:click={() => (showTemplateModal = false)}');
goodLines.push('\t\t\t\t\t\tclass="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition"');
goodLines.push('\t\t\t\t\t>');
goodLines.push('\t\t\t\t\t\tキャンセル');
goodLines.push('\t\t\t\t\t</button>');
goodLines.push('\t\t\t\t\t<button');
goodLines.push('\t\t\t\t\t\ton:click={saveAsTemplate}');
goodLines.push('\t\t\t\t\t\tdisabled={savingTemplate}');
goodLines.push('\t\t\t\t\t\tclass="flex-1 px-4 py-2 bg-purple-600 text-white rounded-lg font-semibold hover:bg-purple-700 transition disabled:opacity-50"');
goodLines.push('\t\t\t\t\t>');
goodLines.push('\t\t\t\t\t\t{savingTemplate ? \'保存中...\' : \'保存\'}');
goodLines.push('\t\t\t\t\t</button>');
goodLines.push('\t\t\t\t</div>');
goodLines.push('\t\t\t</div>');
goodLines.push('\t\t</div>');
goodLines.push('\t</div>');
goodLines.push('{/if}');

fs.writeFileSync(filePath, goodLines.join('\n'), 'utf8');
console.log('✅ ファイルを復旧しました（編集UIは一時的なプレースホルダー）');
